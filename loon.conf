# 官方教材，手把手系列
# https://www.notion.so/godtools/Loon-f0a98c39f5224c09b281c79837380431

# From default configure
# Update Date: 2022.06.12 
# author: wangqifei
# https://raw.githubusercontent.com/wongqi/vpn/main/loon.conf
# 配置文件官方说明： https://github.com/Loon0x00/LoonExampleConfig/blob/master/example.conf

# 目前个人在用的图标库
# Face策略图标 https://raw.githubusercontent.com/Orz-3/face/master/face.json
# qure彩色图标 https://github.com/Koolson/Qure/raw/master/Other/QureColor-All.json

# >192.168.0.0/24 代表是A类地址du主机为8位，表示192.168.0固定，后面是可变，掩码为255.255.255.0
# >192.168.0.0/16 代表B类地址，主机为16，表示192.168固定，后面是可用

[General]
# 跳过某个域名或者IP段
skip-proxy = 127.0.0.0/8,169.254.0.0/16,192.0.2.0/24,192.168.0.0/16,10.0.0.0/8,172.16.0.0/12,6,198.51.100.0/24,224.0.0.0/4,localhost,*.local,e.crashlynatics.com
bypass-tun = 10.0.0.0/8,100.64.0.0/10,127.0.0.0/8,169.254.0.0/16,172.16.0.0/12,192.0.0.0/24,192.0.2.0/24,192.88.99.0/24,192.168.0.0/16,198.18.0.0/15,198.51.100.0/24,203.0.113.0/24,224.0.0.0/4,255.255.255.255/32
# DNS server  1.1.1.1是hdo box使用
# DNS 服务器，如果只在中国大陆境内使用，推荐删除 1.0.0.1 和 8.8.8.8
dns-server = system,114,114,114,114，119.29.29.29,223.5.5.5,1.1.1.1,1.2.4.8
# Doh server, only for Wireformat
doh-server = https://example.com/dns-query
# Wi-Fi 访问
allow-udp-proxy = false
allow-wifi-access = true
wifi-access-http-port = 7222
wifi-access-socket5-port = 7221
# 网络测试 URL
proxy-test-url = http://www.qualcomm.cn/generate_204
test-timeout = 5
# 资源解析器
resource-parser = https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/backend/dist/sub-store-parser.loon.min.js

ssid-trigger = SSID-DIRECT
real-ip = *.apple.com, *apple.com
allow-udp-proxy = true
host = 127.0.0.1

[Proxy]
# 内置 DIRECT、REJECT 策略
# 内置 PROXY 指向本地节点或者订阅节点中的任何一个（有本地节点默认指向第一个本地节点，当没有本地节点但有订阅节点时，指向第一个订阅的第一个节点，本地节点和订阅节点都不存在时指向DIRECT）
# 目前支持协议类型：ss、ss+simple obfs、ssr、http、https、vmess+tcp、vmess+tcp+tls、VLESS、trojan、

# 添加的本地节点名称修改为localA-localD可被策略组G-Local选择
localA = vmess,140.238.205.175,8888,chacha20-ietf-poly1305,"4c8b076c-d644-4aa6-8968-65921ef989ae",over-tls:false,transport:tcp,skip-cert-verify:0
localB = vmess,140.238.202.86,8080,chacha20-ietf-poly1305,"13dbd8e6-769b-4aa9-958f-1c5e738de728",transport=tcp,alertId=0,path=/,host=140.238.202.86,tls-name=localB

[Remote Proxy]
# 订阅节点。可以有多个。
#wangqifei为自建节点
# 订阅内容为节点信息进行base64转码即可
wangqifei = https://raw.githubusercontent.com/wongqi/vpn/main/subscription.list,udp=ture,fast-open=ture,vmess-aead=true,update-interval=43200,img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Dler.png

[Remote Filter]
# 筛选订阅节点，筛选后的结果可加入到策略组中，目前支持三种筛选方式。节点筛选 ，筛选的范围可以是多个订阅组
# NameKeyword: 根据提供的关键词对订阅中所有节点的名称进行筛选，使用筛选后的节点。 从wangqifei的节点订阅中筛选节点名称带有”tk“ 字符的PG-All。
#   Proxy1 = NameKeyword,wangqfei, FilterKey = "tk"
# NameRegex: 根据提供的正则表达式对订阅中所有节点的名称进行筛选，使用筛选后的节点。 使用正则表达对wangqifei订阅中国呢对节点进行名称筛选，也可以是多个订阅组：Hulu = NameKeyword,Subs,Subs2,FilterKey = Hulu
Proxy2 = NameRegex,wangqfei, FilterKey = "^(?!.*(关键词1|关键词2)).*$"
# NodeSelect: 使用在UI上选择的节点。 
# 目前Loon商店版不起作用，待考证
ProxyAll = NodeSelect,wangqifei

[Proxy Group]
# 策略/【策略组】  策略类型分为：select  ssid  url-test  fallback  load-valance
# 默认值的是按照顺序排在前面的第一个。
# 节点选项  PROXY = select,Auto,1,2,3,4,Subs

PG-Global = select,PG-Auto,PG-All,PG-local,ProxyAllimg-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Global.png
# url-test模式，给提供的url发出http header请求，根据返回结果，选择测速最快的节点，默认间隔600s，测速超时时间5s，为了避免资源浪费，建议节点数不要过多，只支持单个节点和远端节点，其他会被忽略
PG-Auto = url-test,wangqifei,url=http://www.google.com/generate_204,interval = 300,max-timeout = 3000,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Round_Robin.png
PG-All = select,Proxy2
# 添加了一项本地节点，[Proxy]手动添加修改名字为:localA-localD可在此策略组内宣传
PG-Local = select,loaclA,localB,localC,loaclD
# telegram在使用VPN时选择代理，不使用VPN时选择DIRECT，流量走自带的MTPROXY
PG-Telegram = select,DIRECT,PG-Global,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Telegram_X.png
# soptify目前可以直连，默认直连，登陆换区时可能需要走代理
PG-Spotify = select,DIRECT,PG-Global,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Spotify.png
Speedtest = select,DIRECT,PG-All,PG-Local,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Speedtest.png
PG-AD = select,REJECT,DIRECT,PG-Global,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Advertising.png
PG-Domestic = select,DIRECT,PG-Global,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Domestic.png
# fallback模式，和url-test类似，不同的是会根据顺序返回第一个可用的节点，为了避免资源浪费，建议节点数不要过多，只支持单个节点和远端节点，其他会被忽略
# Auto1 = fallback,1,2,3,4,Subs,url = http://bing.com/,interval = 600
# 负载均衡，可选三种算法：random：随机选择策略组可用节点，round-robin：轮询策略组可用节点，pcc：在random基础上，针对相同host使用同一节点，此处url用来测试节点可用性，每隔interval进行一次测速，max-timeout参数用于筛选测试时间超过max-timeout的节点为不可用节点
# LoadBalance = load-balance,node1,node2,remoteNodes, url = http://bing.com, interval = 600,algorithm = pcc, max-timeout=3000
# 别名 = ssid，默认 = 策略， 蜂窝 = 策略， ssid名称 = 策略
# SSID = ssid, default = PROXY, cellular = DIRECT, "DivineEngine" = PROXY

# 兜底策略  白名单模式 PROXY，黑名单模式 DIRECT
PG-Final = select,PG-Global,DIRECT,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Final.png

[Rule]
# Local RULE
# Type:DOMAIN-SUFFIX,DOMAIN,DOMAIN-KEYWORD,USER-AGENT,URL-REGEX,IP-CIDR
# Strategy:DIRECT,Proxy,REJECT
# Options:no-resolve(no-resolve(only for cidr))
# DOMAIN,google.com,PROXY
# GeoIP China
# GEOIP,CN,DIRECT
# FINAL,Final  #Final为策略组的兜底策略别名

# URL-REGEX,(Subject|HELO|SMTP),DIRECT

# >telegram不走vpn走mtproxy ，也可以单独为telegram创建一条订阅规则【Rote Rule】手动选择是否走代理
# 自有服务器
# IP-CIDR,140.238.202.86,DIRECT
# IP-CIDR,152.67.102.195,DIRECT
# 来源于网络的mtproxy
# IP-CIDR,45.137.97.241/32,DIRECT
#73为稳定的白名单模式需要先打开https://20.89.143.73/add.php
# IP-CIDR,20.89.143.73/32,DIRECT
# IP-CIDR,185.235.40.144/32,DIRECT

DOMAIN-SUFFIX,local
IP-CIDR,192.168.0.0/16,no-resolve
IP-CIDR,10.0.0.0/8,no-resolve
IP-CIDR,172.16.0.0/12,no-resolve
IP-CIDR,127.0.0.0/8,no-resolve
IP-CIDR,100.64.0.0/10,no-resolve
IP-CIDR6,::1/128,no-resolve
IP-CIDR6,fc00::/7,no-resolve
IP-CIDR6,fe80::/10,no-resolve
IP-CIDR6,fd00::/8,no-resolve

#geoip us 会导致部分未被墙的流量走代理，谨慎使用
#GEOIP,US,Global
GEOIP,CN,DIRECT
#FINAL,DIRECT
FINAL,PG-Global

[Remote Rule]
# 订阅规则URL,策略
# https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Rule/ExampleRule.list, policy=PROXY, tag=name, enabled=true

# 全球直连
https://raw.githubusercontent.com/dler-io/Rules/main/Surge/Surge%203/Provider/Special.list, policy=DIRECT, tag=Special, enabled=true


# >Telegram规则
https://raw.githubusercontent.com/wongqi/vpn/main/telegram.list, policy=PG-Telegram, tag=telegram, enabled=true
# >Spotify规则
https://raw.githubusercontent.com/wongqi/vpn/main/spotify.list, policy=PG-Spotify, tag=spotify, enabled=true


# >去广告，含自定义去广告列表
https://raw.githubusercontent.com/wongqi/vpn/main/liby.list, policy=PG-AD, tag=自定义去广, enabled=true
# >MTM正则表达去广告
https://raw.githubusercontent.com/wongqi/vpn/main/tide.list, policy=PG-AD, tag=正则去广告, enabled=true
# >广告拦截
https://raw.githubusercontent.com/dler-io/Rules/main/Surge/Surge%203/Provider/Reject.list, policy=广告拦截, tag=Reject, enabled=true

# >apple服务 
https://raw.githubusercontent.com/wongqi/vpn/main/apple.list, policy=PG-Domestic, tag=Apple服务, enabled=true
# >国内媒体
https://raw.githubusercontent.com/eHpo1/Rules/master/Surge4/Ruleset/AsianMedia.list, policy=PG-Domestic, tag=国内媒体, enabled=true
# >国内网络列表
https://raw.githubusercontent.com/wongqi/vpn/main/Domestic.list, policy=PG-Domestic, tag=国内网络列表, enabled=true
# >国外媒体 其中spotify被注释了，走分流策略，目前可连访问
https://raw.githubusercontent.com/wongqi/vpn/main/GlobalMedia.list, policy=PG-Global, tag=国外媒体, enabled=true
# >国外网络列表 其中Telegram被注释了，走分流策略，便于设置MTPROXY
https://raw.githubusercontent.com/eHpo1/Rules/master/Surge4/Ruleset/Global.list, policy=PG-Global, tag=国外网络列表, enabled=true

# 测速
https://raw.githubusercontent.com/dler-io/Rules/main/Surge/Surge%203/Provider/Speedtest.list, policy=Speedtest, tag=Speedtest, enabled=true

[Rewrite]
# Redirect Google Search Service
^https?:\/\/(www.)?(g|google)\.cn https://www.google.com 302

[Remote Rewrite]
# 订阅url,别名(可选)
# https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Rewrite/AutoRewrite_Example.list,tag=auto,enable=true

https://raw.githubusercontent.com/wongqi/vpn/main/Rewrite.list, tag=eHpo, enabled=true
https://raw.githubusercontent.com/Orz-3/QuantumultX/master/YouTube.conf, tag=YouTube去广告, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/General.conf, tag=神机重定向, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/Block/Advertising.conf, tag=神机去广告, enabled=true
https://raw.githubusercontent.com/NobyDa/Script/master/QuantumultX/Rewrite_lhie1.conf, tag=lhie1去广告, enabled=true

[Host]
#可以指定一下四种模式：
# 1、指定域名使用对应的IP地址
# 2、将域名指向另一个域名
# 3、指定域名请求DNS时使用特定的DNS服务器，格式为：google.com = server:8.8.8.8 或者 *.baidu.com = server:https://example.com/dns-query
# 4、指定具体的SSID环境下使用特定的DNS服务器
*.testflight.apple.com = server:8.8.4.4
ssid:LOON WIFI = server:system

[Script]
# http-request 处理请求的脚本
# http-response 处理请求响应的脚本
# cron 定时脚本
# network-changed   网络发生变化触发脚本
# generic  通用型脚本，可用在操作节点/策略组中，执行是会带入节点名称和策略组名称，脚本必须在开启NE时

enable = true

# http-request ^https?:\/\/(www.)?(example)\.com script-path=localscript.js,tag = requestScript,enable=true
# http-response ^https?:\/\/(www.)?(example)\.com script-path=https://example.com/loon.js,timeout=10,requires-body = true,tag = responseScript,enable=true
# cron "0 8 * * *" script-path=cron.js,tag = responseScript,enable=true

# network-changed script-path=https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Script/netChanged.js, tag=changeModel,enable=true

# generic script-path=https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Script/generic_example.js,tag=GeoLocation,timeout=10,imPG-url=location.fill.viewfinder.system

# 破解sptoify premium脚本,来自@app2smile
# http-response ^https:\/\/spclient\.wg\.spotify\.com\/(bootstrap\/v1\/bootstrap|user-customization-service\/v1\/customize)$ script-path=https://raw.githubusercontent.com/wongqi/vpn/main/spotifypremium.js, requires-body=true, binary-body-mode=true, timeout=10, tag=spotifyPremuin
# 不使用mitm和script的直接配置，使用spotifyPremuin.plugin以插件形式导入也一样使用。https://raw.githubusercontent.com/wongqi/vpn/main/spotifypremium.plugin

#  今日限行查询,@cyubuyuan
# cron "0 7 * * *" script-path=https://raw.githubusercontent.com/wongqi/vpn/main/今日限行.js, tag=今日车辆限行规则

[Remote Script]
# https://example.com/loon.js, tag=scripts, enable=true

[Plugin]
# plugin-url tag=tag,proxy=插件中PROXY所指向的策略,enable=true
# plugin策略可设置为DIRECT,REJECT,PROXY，其中PROXY为用户在app中手动映射的策略，rule后不跟随策略默认使用PROXY
# example: https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Rewrite/AutoRewrite_Example.list,tag=boxjs,enable=true

# sub-store loon商店版暂不支持
#https://raw.githubusercontent.com/PenPG-YM/Sub-Store/master/config/Loon.plugin, tag=Sub-Store, enabled=true
# 知乎PG-AD
#!desc=开屏页广告,首页右下角悬浮框,推荐列表广告,问题回答列表广告,具体回答下广告
# https://raw.githubusercontent.com/app2smile/rules/master/plugin/zhihu.plugin, tag=zhihuNOads, enabled=true
#流媒体字幕语言配合boxjs使用 from github by dualsubs
# https://github.com/DualSubs/DualSubs/blob/main/plugins/DualSubs.plugin?raw=true, tag=🍿️ DualSubs for Streaming Media Platform, enabled=true
# Boxjs
# https://raw.githubusercontent.com/chavyleung/scripts/master/box/rewrite/boxjs.rewrite.loon.plugin, tag=BoxJs, enabled=true
# youtube去广告
# https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Module/Block/YouTubeAds.sgmodule, tag=Block YouTube Advertising, enabled=true
# 本地app缓存去开屏广告 该插件似乎目前已经失效
# https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/script/startup/startup.lnplugin, tag=开屏PG-AD, enabled=true
# 哔哩哔哩去广告
https://raw.githubusercontent.com/app2smile/rules/master/plugin/bilibili.plugin, tag=bilibili, enable=false
# 破解sptoify premium脚本,来自@app2smile
https://raw.githubusercontent.com/app2smile/rules/master/plugin/spotify.plugin, tag=Spotify(iOS15), enabled=true

[MITM]
# hostname = *.example.com,*.sample.com
# enable = true
# skip-server-cert-verify = true
# #ca-p12 =
# #ca-passphrase =

hostname =spclient.wg.spotify.com
enable = true
skip-server-cert-verify = true
ca-p12 = MIIJrgIBAzCCCXgGCSqGSIb3DQEHAaCCCWkEggllMIIJYTCCA/8GCSqGSIb3DQEHBqCCA/AwggPsAgEAMIID5QYJKoZIhvcNAQcBMBwGCiqGSIb3DQEMAQYwDgQIYl/myyqpUtwCAggAgIIDuMYEzEUgSxIUScp1vSSooV2iePmy4Q7YP8cfnhaatGNnX+CC9/rDdPgDuz7k1D/7hYdaOsTKpXU9aUAxHvg9SLAWFm5dL4g/9MVk7Id8qCPMYbO2H+lQTChEN8iTpWdq+qlAC8VpqY1TTXhQTkCKF3cT+S68xZUMFDuX95INBUswjN+imGIYVKFBp4s0K7UDFpF0BMUD5HwR9U/QFsZ+ScCaNj/Y1p95LWPllUkeeb67uTOeXc55yEM+O8W/SGjJhgjdnvPgetCfLMc6RWREK0SNAGMzHibuvHHHm0fIBg5zwE+DjDdefwYMUghpQVl+0gSeASjsvP9mSgtm9+horQCw/ef0a3FxcKsmTzSE6o4dx37fEckEouYN/Ni+OWnKWb6eXeaL6yVD4gLDmEwV8lmgBG4OjYcdY9jeIBFkDzbG70eUvmj6/1olUtnOnkGY5ZMvCGhVr8K4ZJ80xuykgxgPI/5enNZZiS9cAuk85xAN+XeDvmQdIHF9TxMRyLGJyWUkczjV3DSPkqZ2hMFJRuOF5zbhZlCcJgkEdCYbb4sebYnGKOEVnfceFVK1yv33Hp+BcQDmqEm+gssrtNhJGCWtqTjT28WeGxGgAWOaY2e+isVJG6TvU1D+tHCl09WyLKM671a63jY6QvpWwRpSMkbcrGEMhQRo2IMrxhwkia9vkk+eDYRt4jJcG8gRAWB0crXuYMM/t0gxDKTiVF7aS0XEHWMkH7ATWFI/+Yta4dsVLAOACnTCarD80RH/xV5JK1KiAn5pSzy13fRwvYcHAluJ/7JHphVUtNYroNgfzdt5n65B7qD5PU4ykhVMfflZXom17VGwUqf750kx0fowU23XCUyWoifoGBbkR9mgGHBqZyMZHv+Z9iWPmpqJcfjL9UBX91Ulzg74IQocvNTHMVu3cLXx63OiQ6k4+FYZcvTiJyYpu7N36I/nLz61L3D2d8LaYLHAcvnsClfC6QRVVAU/wvQnhp2/oPh/l19KBX7QUnBKPU1oFLEV8y1G87IbN/LDJ0SUroS/McCojANgutTpKQJT+5jlid+GxZkEi4CXlTAUfu6/lioLdJugycPEKHu49zAmbDw8lUy5QRUbyjWrZk8tLu2bKzaxg5A21N9N/zKt9uXmcN5J/O1L8WIcAIXDytAmkyw7ez45EF631i6k2uJeuIxtBwRfwDyuw4FwKrsqw197FoqsvsMb68Tak2vVtzgs/rSQ1PL3acsLQ0CBZ9/Do1WxAb8azc4ko36JE7e0xtM43qswggVaBgkqhkiG9w0BBwGgggVLBIIFRzCCBUMwggU/BgsqhkiG9w0BDAoBAqCCBO4wggTqMBwGCiqGSIb3DQEMAQMwDgQI3rZrdI9fPuMCAggABIIEyGZyUi/orJ8LMBdjZFQaCNXECddtwPuKPg+QxAzpxC0/VSgdtHsOR/v8koAJgddmGJUDwLXGVcuasJ7YlhdIKpnvSzNBB7qjJoQBQ5dMsXVfcJaRwbhjMExjZyvUjCKH21lJ7yaxGQORtmIXTpx0FPQUprJtghF/C2ejA9QSW+SCjYY64dkvUovvXMDaddKWq+i0lOGKi0hvCjGiLobIovBpSfjX1EYTK5pmpBtWKro5Wnm/Q5r/OBU2+PyzlFCZdMdov7bIcUwnz4D1Oypn6woQol8N9AqgQL52pMweL8k0fK8YH3eChE5EP0JNc1X0vRTHhKiAB0Su5vjSVa5QU4ZBTCdNdwM7rr2NJMzMjF8g4y7fXMTVXdPUi1QeYihOqmcU2i0pmrk4zPeobGfzLIcgRSLf9qeP2r9Gw3yt3rjJMHgbx6QvBZ+5GZ8/iooQTbLjUj83QfdGeidkD+Auba9f8cPDiurDF+Pjt2FotaT3Vqx38qlaprBdlk7H1yVZtY2G5Y5pquiyPK/C+QwrXYWEocsJIAvAb3xhXalqkUs6ZmKTVQqlpUR0L/ogRmeJ0OxHYKbqy4Rg2eIcHogPEK2Xa2iiPFmG6AbWUnE8mmH5PunCPGuhcOxFYZAkpf96//c0J9ry52pcvR15ZIvmZdSLrhjD4pD+CElUKFS6izafXSyFQpjNuQI2aCnMNS/AFSe3kH6naARoOUnXFC7Wz+e69nOKs6G84/gV3xD4klk5vCza32e55MtUD9SX09+q9XItarBeBYCn3XCZk1sZADmg8gHxZzgEj3mA7slqsRnx7E80lz1UlHU4FSLkeMEU2u9/K1QA6VZzFfFRXtitZuam2Di98zCyftyb0D0DwlywSab/ww7VrROnBq3sozc7uo7eEiT8Jx9qd2kGNF+r9KI6QePBtATJzsgCNoPHNTdA7DNX4opD0bNsRtFHQLW3b9k1PeeAix1agcrqsDVV2PsWn9Qae9vY4zqwkNY+hjlmt2CRPG/5pX8COVn+dzqGHTksFg/NgVZsAj8NK4ZGf+QSRxSUo/5sYbu61Pj6TpyEIjOEPM+ylXdhziKhDTfw4GkrmTjlrQQ9T+7pqC86nYS8HH9ZcET+SecZK8kMPe7pwbzwHPWsl+OqHTP01KvEAogOL8fAZ7LsbaHlPoLHkHDQzxeep6ZKDnoCphjsf4oqSlcQzNh383mAr0YTPY8SaVV5G6Hh9mCHQqKWWmXhNd8rN/kqZn0H7KvfMJW2BGVWgCvYaE5m5sodhHYjSMGzgauV7O9DL3H+Az2Ztz0K2hj11xsz/C7nRVNOgV02rDvIEHw0asBPq2gYPC4OG/HutK+etT87z+tLftGO9V5+TMcIc4JKaNVOUg814DP59yo/WptH346rHwY7AqvgmEi6LJ1LLP9W6+HH1k3Fk6WEpOtDJS3YqV4EjswXGCtLXu6y/IvqLkyvT7NIZi/BYFf39xwJDvD5SbLM2jhCShG/HsD0/4qfqeGA/x4LLaM9Lyl091XeKWtY9XpP9nZzfgOJkk2rsBH29jS5d8lLkz+GhdzrROPIgHn+yaSsp8vIwr8L9h27+6/95kbUiQugOWEWdO/ZO+X/iyhThallmiNbJP+Qv3abUJgzcTE+MBcGCSqGSIb3DQEJFDEKHggAZQBIAHAAbzAjBgkqhkiG9w0BCRUxFgQU5gr9fNKSpq6pZ3g5Hca/uXOuY+cwLTAhMAkGBSsOAwIaBQAEFKXWG0IDj30Q2VfVGNWcVJ8iipuZBAgHvSM3D+pSUA==
ca-passphrase = eHpo