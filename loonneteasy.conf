
# Base on default configure
# 配置文件官方说明： https://github.com/Loon0x00/LoonExampleConfig/blob/master/example.conf
# Update Date: 2022.10.01
# author: wangqifei
# https://raw.githubusercontent.com/wongqi/vpn/main/loonneteasy.conf


[General]
# 跳过某个域名或者IP段
skip-proxy = 127.0.0.0/8,169.254.0.0/16,192.0.2.0/24,192.168.0.0/16,10.0.0.0/8,172.16.0.0/12,6,198.51.100.0/24,224.0.0.0/4,localhost,*.local,e.crashlynatics.com
bypass-tun = 10.0.0.0/8,100.64.0.0/10,127.0.0.0/8,169.254.0.0/16,172.16.0.0/12,192.0.0.0/24,192.0.2.0/24,192.88.99.0/24,192.168.0.0/16,198.18.0.0/15,198.51.100.0/24,203.0.113.0/24,224.0.0.0/4,255.255.255.255/32
# DNS server  

dns-server = system,223.5.5.5,223.6.6.6,119.29.29.29,1.2.4.8,114,114,114,114
# Doh server, only for Wireformat
doh-server = https://dns.alidns.com/dns-query
# Wi-Fi 下通局域网网络共享访问
allow-udp-proxy = false
allow-wifi-access = false
wifi-access-http-port = 7222
wifi-access-socket5-port = 7221
# 网络测试 URL
proxy-test-url = http://www.qualcomm.cn/generate_204
test-timeout = 5
# 资源解析器
resource-parser = https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/backend/dist/sub-store-parser.loon.min.js

ssid-trigger = SSID-DIRECT
real-ip = *.apple.com, *apple.com
allow-udp-proxy = true
host = 127.0.0.1

[Proxy]
# ⭐️Loon支持 SS/SSR, Vmess(tcp/ws), Vless(tcp/ws), HTTP/S, Trojan

# 添加的本地节点名称修改为localA-localD可被策略组G-Local选择
localA = vmess,wangqifei.ga,30114,auto,"d161f72a-13fc-4515-d707-8ff2bd40f0e4",transport=tcp,alterId=0,path=/
localD = Vmess,140.238.202.86,8080,auto,"13dbd8e6-769b-4aa9-958f-1c5e738de728",transport=tcp,alterId=0
localB = vmess,140.238.202.86,8080,chacha20-ietf-poly1305,"13dbd8e6-769b-4aa9-958f-1c5e738de728",transport=tcp,alertId=0,path=/,host=140.238.202.86,tls-name=localB
localC = Vmess,66.42.55.118,443,auto,"ca1a9dcd-35c3-4b08-80d3-db0e9de16331",transport=ws,alterId=0,path=/RdIyx6hMMR,host=v02.guanpinhao.top
[Remote Proxy]
# 订阅内容为节点信息进行base64转码即可
wangqifei = https://raw.githubusercontent.com/wongqi/vpn/main/subscription.list,udp=ture,fast-open=ture,vmess-aead=true,update-interval=43200,img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/mini/Dler.png
net = ### ,udp=ture,fast-open=ture,vmess-aead=true,update-interval=43200
[Remote Filter]
# 筛选订阅节点，筛选后的结果可加入到策略组中，目前支持三种筛选方式。节点筛选 ，筛选的范围可以是多个订阅组
# NameKeyword: 根据提供的关键词对订阅中所有节点的名称进行筛选，使用筛选后的节点。 从wangqifei的节点订阅中筛选节点名称带有”tk“ 字符的PG-All。
# Proxy1 = NameKeyword,wangqfei, FilterKey = "tk"
# NameRegex: 根据提供的正则表达式对订阅中所有节点的名称进行筛选，使用筛选后的节点。 使用正则表达对wangqifei订阅中国呢对节点进行名称筛选，也可以是多个订阅组：Hulu = NameKeyword,Subs,Subs2,FilterKey = Hulu
# Loon正则筛选节点：
    # ^.*(A|B)  =  A或者B
    # (A.*B|B.*A)  =  有A有B
    # ^(?!.*A)    =   不含A 
    # ^(?!.*?B).*A  =  有A但不含B
Proxy2 = NameRegex,net,wangqifei,zhenshenservice,local,FilterKey = "^(?!.*(关键词1|关键词2)).*$"
# NodeSelect: 使用在UI上选择的节点。 
# 目前Loon商店版不起作用，待考证
ProxyAll = NodeSelect,wangqifei

[Proxy Group]
# 策略/【策略组】  策略类型分为：select  ssid  url-test  fallback  load-valance
# 默认值的是按照顺序排在前面的第一个。
# 节点选项  PROXY = select,Auto,1,2,3,4,Subs

PG-Global = select,PG-Auto,net-auto,zhenshen-auto,PG-All,PG-Local,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Global.png
# url-test模式，给提供的url发出http header请求，根据返回结果，选择测速最快的节点，默认间隔600s，测速超时时间5s，为了避免资源浪费，建议节点数不要过多，只支持单个节点和远端节点，其他会被忽略
PG-Auto = url-test,wangqifei,url=http://www.google.com/generate_204,interval = 300,max-timeout = 3000,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Round_Robin.png
net-auto = url-test,net,url=http://www.google.com/generate_204,interval = 300,max-timeout = 3000
zhenshen-auto = url-test,zhenshenservice,url=http://www.google.com/generate_204,interval = 300,max-timeout = 3000
PG-All = select,Proxy2
# 添加了一项本地节点，[Proxy]手动添加修改名字为:localA-localD可在此策略组内宣传
PG-Local = select,localA,localB,localC,localD
# telegram在使用VPN时选择代理，不使用VPN时选择DIRECT，流量走自带的MTPROXY
PG-Telegram = select,DIRECT,PG-Global,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Telegram_X.png
# soptify目前可以直连，默认直连，登陆换区时可能需要走代理
PG-Spotify = select,DIRECT,PG-Global,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Spotify.png
Speedtest = select,DIRECT,PG-All,PG-Local,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Speedtest.png
PG-AD = select,REJECT,DIRECT,PG-Global,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Advertising.png
PG-Domestic = select,DIRECT,PG-Global,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Domestic.png
PG-Final = select,PG-Global,DIRECT,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Final.png

[Rule]

# 自有服务器
# IP-CIDR,140.238.202.86,DIRECT
# IP-CIDR,152.67.102.195,DIRECT
# 来源于网络的mtproxy
# IP-CIDR,45.137.97.241/32,DIRECT
#73为稳定的白名单模式需要先打开https://20.89.143.73/add.php
# IP-CIDR,20.89.143.73/32,DIRECT
# IP-CIDR,185.235.40.144/32,DIRECT

DOMAIN-SUFFIX,local,DIRECT
IP-CIDR,192.168.0.0/16,no-resolve
IP-CIDR,10.0.0.0/8,no-resolve
IP-CIDR,172.16.0.0/12,no-resolve
IP-CIDR,127.0.0.0/8,no-resolve
IP-CIDR,100.64.0.0/10,no-resolve
IP-CIDR6,::1/128,no-resolve
IP-CIDR6,fc00::/7,no-resolve
IP-CIDR6,fe80::/10,no-resolve
IP-CIDR6,fd00::/8,no-resolve

GEOIP,CN,DIRECT
#FINAL,DIRECT
FINAL,PG-Final


[Remote Rule]
# asn 比geoip更加精准
https://raw.githubusercontent.com/VirgilClyne/VirgilClyne/main/modules/ASN/ASN.list, proxy=DIRECT, tag=asn, enbale=true

# 自维护直连
https://raw.githubusercontent.com/wongqi/vpn/main/direct.list, proxy=DIRECT, tag=自定义直连, enbale=true
# 全球直连
https://raw.githubusercontent.com/dler-io/Rules/main/Surge/Surge%203/Provider/Special.list, policy=DIRECT, tag=Special, enabled=true
# >国内媒体
https://raw.githubusercontent.com/eHpo1/Rules/master/Surge4/Ruleset/AsianMedia.list, policy=PG-Domestic, tag=国内媒体, enabled=true
# >国内网络列表
https://raw.githubusercontent.com/wongqi/vpn/main/Domestic.list, policy=PG-Domestic, tag=国内网络列表, enabled=true

# >Telegram规则
https://raw.githubusercontent.com/wongqi/vpn/main/telegram.list, policy=PG-Telegram, tag=telegram, enabled=true
# >Spotify规则
https://raw.githubusercontent.com/wongqi/vpn/main/spotify.list, policy=PG-Spotify, tag=spotify, enabled=true
# >apple服务 
https://raw.githubusercontent.com/wongqi/vpn/main/apple.list, policy=PG-Domestic, tag=Apple服务, enabled=true

# >去广告，含自定义去广告列表
https://raw.githubusercontent.com/wongqi/vpn/main/liby.list, policy=PG-AD, tag=自定义去广告, enabled=true
# >MTM正则表达去广告
https://raw.githubusercontent.com/wongqi/vpn/main/tide.list, policy=PG-AD, tag=正则去广告, enabled=true
# >广告拦截
https://raw.githubusercontent.com/dler-io/Rules/main/Surge/Surge%203/Provider/Reject.list, policy=PG-AD, tag=广告拦截, enabled=true

# 自定义走代理
https://raw.githubusercontent.com/wongqi/vpn/main/proxy.list, policy=PG-Global, tag=自定义走代理, enbale=true
# >国外媒体 含部分自维护国外网络列表。其中spotify被注释了，走分流策略，目前可连访问
https://raw.githubusercontent.com/wongqi/vpn/main/GlobalMedia.list, policy=PG-Global, tag=国外媒体, enabled=true
# >国外网络列表 其中Telegram被注释了，走分流策略，便于设置MTPROXY
https://raw.githubusercontent.com/eHpo1/Rules/master/Surge4/Ruleset/Global.list, policy=PG-Global, tag=国外网络列表, enabled=true


# 测速
https://raw.githubusercontent.com/dler-io/Rules/main/Surge/Surge%203/Provider/Speedtest.list, policy=Speedtest, tag=Speedtest, enabled=true

[Rewrite]
# Redirect Google Search Service 插件里有个cn到com到重定向，出现频繁跳转时需要关闭
^https?:\/\/(www.)?(g|google)\.cn 302 https://www.google.com
^https?+:\/\/youtubei\.googleapis\.com\/youtubei\/.+?(?>ad|log)_ reject-200
^https?+:\/\/.+?\.googlevideo\.com\/.+?(?>&oad|ctier) reject-200
^https?:\/\/(ditu|maps).google\.cn 302 https://maps.google.com

[Remote Rewrite]
# Loon订阅重写取消，和插件功能合并了
https://raw.githubusercontent.com/28413761/QX/main/chongxie.txt, tag=开屏去广告, enable=false
https://raw.githubusercontent.com/wongqi/vpn/main/Rewrite.list, tag=eHpo, enabled=true
https://raw.githubusercontent.com/Orz-3/QuantumultX/master/YouTube.conf, tag=YouTube去广告, enabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/General.conf, tag=神机重定向,e nabled=true
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/Block/Advertising.conf, tag=神机去广告, enabled=true
https://raw.githubusercontent.com/NobyDa/Script/master/QuantumultX/Rewrite_lhie1.conf, tag=lhie1去广告, enabled=true

[Host]

*.testflight.apple.com = server:8.8.4.4
ssid:LOON WIFI = server:system

[Script]


enable = true

# 破解sptoify premium脚本,来自@app2smile 不使用mitm和script的直接配置，使用spotifyPremuin.plugin以插件形式导入也一样使用。https://raw.githubusercontent.com/wongqi/vpn/main/spotifypremium.plugin
http-response ^https:\/\/spclient\.wg\.spotify\.com\/(bootstrap\/v1\/bootstrap|user-customization-service\/v1\/customize)$ script-path=https://raw.githubusercontent.com/wongqi/vpn/main/spotifypremium.js, requires-body=true, binary-body-mode=true, timeout=10, tag=spotifyPremuin
# spotify歌词翻译，来自@app2smile 使用说明 https://raw.githubusercontent.com/app2smile/rules/master/js/spotify-lyric.js  修改下方argument中的appid和securityKey,填入自己的appid和密钥
http-response ^https:\/\/spclient\.wg\.spotify\.com\/color-lyrics\/v2\/track\/ script-path=https://raw.githubusercontent.com/app2smile/rules/master/js/spotify-lyric.js, requires-body=true, binary-body-mode=true, timeout=10, tag=Spotify歌词翻译, argument=appid=20220712001271191&securityKey=1XIPEOzEJ0op8KQPy6uO

[Remote Script]
# https://example.com/loon.js, tag=scripts, enable=true

[Plugin]
https://raw.githubusercontent.com/SukkaW/Surge/master/Modules/google_cn_307.sgmodule, tag=google重定向cn到com, enbaled=ture
https://raw.githubusercontent.com/app2smile/rules/master/plugin/adsense.plugin, tag=快手联盟 优量汇 穿山甲去广告, enabled=ture
https://raw.githubusercontent.com/app2smile/rules/master/plugin/qqnews.plugin, tag=腾讯新闻去广告, enbaled=false
# https://raw.githubusercontent.com/app2smile/rules/master/plugin/bilibili.plugin, tag=Bilili去广告, enbale=ture
https://raw.githubusercontent.com/zqzess/rule_for_quantumultX/master/Surge/Module/bilibili.sgmodule, tag=哔哩哔哩去广告 增强, enable=false
https://raw.githubusercontent.com/app2smile/rules/master/plugin/zhihu.plugin, tag=zhihuNOads, enabled=ture
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/script/zhihu/zhihu_plus.sgmodule, tag=知乎助手增强版, enbale=ture
https://raw.githubusercontent.com/jsj0622/Surge/main/zyzchongxie.sgmodule, tag=重写去广告, enabled=false
https://gitlab.com/lodepuly/vpn_tool/-/raw/main/Tool/Loon/Plugin/GitHub.plugin, tag=github加速, enabled=false

# sub-store loon商店版暂不支持
https://raw.githubusercontent.com/PenPG-YM/Sub-Store/master/config/Loon.plugin, tag=Sub-Store, enabled=false

#流媒体字幕语言配合boxjs使用 from github by dualsubs
# https://github.com/DualSubs/DualSubs/blob/main/plugins/DualSubs.plugin?raw=true, tag=🍿️ DualSubs for Streaming Media Platform, enabled=true
# Boxjs
# https://raw.githubusercontent.com/chavyleung/scripts/master/box/rewrite/boxjs.rewrite.loon.plugin, tag=BoxJs, enabled=true
# https://raw.githubusercontent.com/DivineEngine/Profiles/master/Surge/Module/Block/YouTubeAds.sgmodule, tag=Block YouTube Advertising, enabled=true
https://raw.githubusercontent.com/dunlanl/FuGfConfig/main/ConfigFile/Loon/LoonPlugin/FuckDouyin.plugin, tag=抖音屏蔽, enalbe=false
# 破解sptoify premium脚本,来自@app2smile
https://raw.githubusercontent.com/app2smile/rules/master/plugin/spotify.plugin, tag=Spotify(iOS15), enabled=true

[MITM]
# hostname = *.example.com,*.sample.com
# enable = true
# skip-server-cert-verify = true
# ca-p12 =
# ca-passphrase =

hostname = spclient.wg.spotify.com
enable = true
skip-server-cert-verify = true
ca-p12 = MIIJrgIBAzCCCXgGCSqGSIb3DQEHAaCCCWkEggllMIIJYTCCA/8GCSqGSIb3DQEHBqCCA/AwggPsAgEAMIID5QYJKoZIhvcNAQcBMBwGCiqGSIb3DQEMAQYwDgQIYl/myyqpUtwCAggAgIIDuMYEzEUgSxIUScp1vSSooV2iePmy4Q7YP8cfnhaatGNnX+CC9/rDdPgDuz7k1D/7hYdaOsTKpXU9aUAxHvg9SLAWFm5dL4g/9MVk7Id8qCPMYbO2H+lQTChEN8iTpWdq+qlAC8VpqY1TTXhQTkCKF3cT+S68xZUMFDuX95INBUswjN+imGIYVKFBp4s0K7UDFpF0BMUD5HwR9U/QFsZ+ScCaNj/Y1p95LWPllUkeeb67uTOeXc55yEM+O8W/SGjJhgjdnvPgetCfLMc6RWREK0SNAGMzHibuvHHHm0fIBg5zwE+DjDdefwYMUghpQVl+0gSeASjsvP9mSgtm9+horQCw/ef0a3FxcKsmTzSE6o4dx37fEckEouYN/Ni+OWnKWb6eXeaL6yVD4gLDmEwV8lmgBG4OjYcdY9jeIBFkDzbG70eUvmj6/1olUtnOnkGY5ZMvCGhVr8K4ZJ80xuykgxgPI/5enNZZiS9cAuk85xAN+XeDvmQdIHF9TxMRyLGJyWUkczjV3DSPkqZ2hMFJRuOF5zbhZlCcJgkEdCYbb4sebYnGKOEVnfceFVK1yv33Hp+BcQDmqEm+gssrtNhJGCWtqTjT28WeGxGgAWOaY2e+isVJG6TvU1D+tHCl09WyLKM671a63jY6QvpWwRpSMkbcrGEMhQRo2IMrxhwkia9vkk+eDYRt4jJcG8gRAWB0crXuYMM/t0gxDKTiVF7aS0XEHWMkH7ATWFI/+Yta4dsVLAOACnTCarD80RH/xV5JK1KiAn5pSzy13fRwvYcHAluJ/7JHphVUtNYroNgfzdt5n65B7qD5PU4ykhVMfflZXom17VGwUqf750kx0fowU23XCUyWoifoGBbkR9mgGHBqZyMZHv+Z9iWPmpqJcfjL9UBX91Ulzg74IQocvNTHMVu3cLXx63OiQ6k4+FYZcvTiJyYpu7N36I/nLz61L3D2d8LaYLHAcvnsClfC6QRVVAU/wvQnhp2/oPh/l19KBX7QUnBKPU1oFLEV8y1G87IbN/LDJ0SUroS/McCojANgutTpKQJT+5jlid+GxZkEi4CXlTAUfu6/lioLdJugycPEKHu49zAmbDw8lUy5QRUbyjWrZk8tLu2bKzaxg5A21N9N/zKt9uXmcN5J/O1L8WIcAIXDytAmkyw7ez45EF631i6k2uJeuIxtBwRfwDyuw4FwKrsqw197FoqsvsMb68Tak2vVtzgs/rSQ1PL3acsLQ0CBZ9/Do1WxAb8azc4ko36JE7e0xtM43qswggVaBgkqhkiG9w0BBwGgggVLBIIFRzCCBUMwggU/BgsqhkiG9w0BDAoBAqCCBO4wggTqMBwGCiqGSIb3DQEMAQMwDgQI3rZrdI9fPuMCAggABIIEyGZyUi/orJ8LMBdjZFQaCNXECddtwPuKPg+QxAzpxC0/VSgdtHsOR/v8koAJgddmGJUDwLXGVcuasJ7YlhdIKpnvSzNBB7qjJoQBQ5dMsXVfcJaRwbhjMExjZyvUjCKH21lJ7yaxGQORtmIXTpx0FPQUprJtghF/C2ejA9QSW+SCjYY64dkvUovvXMDaddKWq+i0lOGKi0hvCjGiLobIovBpSfjX1EYTK5pmpBtWKro5Wnm/Q5r/OBU2+PyzlFCZdMdov7bIcUwnz4D1Oypn6woQol8N9AqgQL52pMweL8k0fK8YH3eChE5EP0JNc1X0vRTHhKiAB0Su5vjSVa5QU4ZBTCdNdwM7rr2NJMzMjF8g4y7fXMTVXdPUi1QeYihOqmcU2i0pmrk4zPeobGfzLIcgRSLf9qeP2r9Gw3yt3rjJMHgbx6QvBZ+5GZ8/iooQTbLjUj83QfdGeidkD+Auba9f8cPDiurDF+Pjt2FotaT3Vqx38qlaprBdlk7H1yVZtY2G5Y5pquiyPK/C+QwrXYWEocsJIAvAb3xhXalqkUs6ZmKTVQqlpUR0L/ogRmeJ0OxHYKbqy4Rg2eIcHogPEK2Xa2iiPFmG6AbWUnE8mmH5PunCPGuhcOxFYZAkpf96//c0J9ry52pcvR15ZIvmZdSLrhjD4pD+CElUKFS6izafXSyFQpjNuQI2aCnMNS/AFSe3kH6naARoOUnXFC7Wz+e69nOKs6G84/gV3xD4klk5vCza32e55MtUD9SX09+q9XItarBeBYCn3XCZk1sZADmg8gHxZzgEj3mA7slqsRnx7E80lz1UlHU4FSLkeMEU2u9/K1QA6VZzFfFRXtitZuam2Di98zCyftyb0D0DwlywSab/ww7VrROnBq3sozc7uo7eEiT8Jx9qd2kGNF+r9KI6QePBtATJzsgCNoPHNTdA7DNX4opD0bNsRtFHQLW3b9k1PeeAix1agcrqsDVV2PsWn9Qae9vY4zqwkNY+hjlmt2CRPG/5pX8COVn+dzqGHTksFg/NgVZsAj8NK4ZGf+QSRxSUo/5sYbu61Pj6TpyEIjOEPM+ylXdhziKhDTfw4GkrmTjlrQQ9T+7pqC86nYS8HH9ZcET+SecZK8kMPe7pwbzwHPWsl+OqHTP01KvEAogOL8fAZ7LsbaHlPoLHkHDQzxeep6ZKDnoCphjsf4oqSlcQzNh383mAr0YTPY8SaVV5G6Hh9mCHQqKWWmXhNd8rN/kqZn0H7KvfMJW2BGVWgCvYaE5m5sodhHYjSMGzgauV7O9DL3H+Az2Ztz0K2hj11xsz/C7nRVNOgV02rDvIEHw0asBPq2gYPC4OG/HutK+etT87z+tLftGO9V5+TMcIc4JKaNVOUg814DP59yo/WptH346rHwY7AqvgmEi6LJ1LLP9W6+HH1k3Fk6WEpOtDJS3YqV4EjswXGCtLXu6y/IvqLkyvT7NIZi/BYFf39xwJDvD5SbLM2jhCShG/HsD0/4qfqeGA/x4LLaM9Lyl091XeKWtY9XpP9nZzfgOJkk2rsBH29jS5d8lLkz+GhdzrROPIgHn+yaSsp8vIwr8L9h27+6/95kbUiQugOWEWdO/ZO+X/iyhThallmiNbJP+Qv3abUJgzcTE+MBcGCSqGSIb3DQEJFDEKHggAZQBIAHAAbzAjBgkqhkiG9w0BCRUxFgQU5gr9fNKSpq6pZ3g5Hca/uXOuY+cwLTAhMAkGBSsOAwIaBQAEFKXWG0IDj30Q2VfVGNWcVJ8iipuZBAgHvSM3D+pSUA==
ca-passphrase = eHpo